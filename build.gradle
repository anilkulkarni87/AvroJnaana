plugins{
    id'java'
    id"com.github.davidmc24.gradle.plugin.avro" version"1.7.0"
    id"com.github.node-gradle.node" version"3.5.1"
    id'checkstyle'
    id("org.openrewrite.rewrite") version("6.5.4")
    id"com.github.imflog.kafka-schema-registry-gradle-plugin" version"1.12.0"
}

group'com.lavro'
version'1.0-SNAPSHOT'

repositories{
    mavenCentral()
    maven{
        url"https://clojars.org/repo/"
    }
    maven{
        url"https://packages.confluent.io/maven"
    }
}

dependencies{
    testImplementation'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation'org.slf4j:slf4j-api:2.0.9'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation'org.slf4j:slf4j-simple:2.0.9'
    implementation"org.apache.avro:avro:1.11.1"
    // https://mvnrepository.com/artifact/net.datafaker/datafaker
    implementation'net.datafaker:datafaker:1.7.0'

    implementation(project(":schemas"))
    implementation(project(":custom-conversions"))
    implementation'org.apache.kafka:kafka-clients:3.5.1'
    // https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer
    implementation'io.confluent:kafka-avro-serializer:5.3.0'
    rewrite("org.openrewrite.recipe:rewrite-static-analysis:1.1.0")


}

def rewriteRunTask = tasks.named("rewriteRun")

test{
    useJUnitPlatform()
}

rewrite{
    activeRecipe("org.openrewrite.staticanalysis.CodeCleanup")
}
checkstyle{
    toolVersion'10.12.5'
    configFile(file("config/checkstyle/checkstyle.xml"))
}


tasks.withType(Checkstyle) {
    dependsOn(rewriteRunTask)
    reports{
        xml.required = true
        html.required = true
        html.stylesheet(resources.text.fromFile('config/xsl/checkstyle-custom.xsl'))

    }
}


schemaRegistry{
    url = 'http://localhost:8081'
    quiet.set(false)
    outputDirectory.set("schema-registry/results/")
    register{
        subject("customerrecord", "schemas/build/generated-main-avro-avsc/com/dataanada/customer/CustomerRecord.avsc", "AVRO")
    }
    config{
        subject("customerrecord", "FULL_TRANSITIVE")
    }
    compatibility{
        subject("customerrecord", "schemas/build/generated-main-avro-avsc/com/dataanada/customer/CustomerRecord.avsc", "AVRO")
    }
}

