{
  "type" : "record",
  "name" : "CustomerObjectModel",
  "namespace" : "com.retail.customer",
  "doc" : "**Retail Customer Object Model**\n\n\tWe should look at the Customer journey, attributes being collected at the source and then look into how we should model it. For now as the primary team responsible for Customer data, we should be able to\n\tUnderstand what is our source for each of these elements and if we are doing any audits around them.\n\n\t**Questions:**\n\n\t1. What are our source teams?\n\n\t2. How are we getting the data?\n\n\t3. Are we auditing it?\n\n\t4. How do each of these datasets impact business?\n\n\t5. What other datasets we have not tapped into?\n\n\t**ENROLL** - First touchpoint of Customer data.\n\n\t**EARN** - Retail Store is earning revenue and Customerâ€™s trust during a sale transaction. We should talk about the transaction data model separately.\n\n\t**MANAGE** - Any Customer interaction with Customer service if exists. This could result in change of communication preferences through web forms.\n\n\t**LEVEL/RANKING** - Customer can reach different tiers based on his purchases.\n\n\t**ENGAGEMENT with BRAND** - Information about events he might attend, This will also survey data, Product reviews, clickstream\n\n\t**CLOSE** - Customer stops engaging with Retail store\n\n\n\t**Example:**\n\n\t1. **Enrollment** - Customer enrolls into Retail store system\n\n\t\t1. Customer can sign up online\n\n\t\t2. Customer can sign up at store\n\n\t\t3. Customer can sign up and buy at store - (ENROLL and EARN together)\n\n\t2. **EARN** - All purchases. What Customer information do we want to tap from a sale transaction and how should we models it.\n\n\t\t1. Digital\n\n\t\t2. Phygital\n\n\t3. **MANAGE** - Any Customer account level changes like preferences.\n\n\t4. **LEVEL/RANKING** - This helps identifying high value Customers.\n\n\t5. **ENAGAGEMENT** - How do we tap into events, reviews and survey and stitch that with profile.  This will also include Clickstream data.\n\n\t\t1. Helps in providing elevated Customer experience.\n\n\t6. **CLOSE** - Why did the Customer stop engaging with the brand?\n\n\tWhat details do we need for a **Customer**:",
  "fields" : [ {
    "name" : "CustomerIdentity",
    "type" : {
      "type" : "record",
      "name" : "CustomerIdentity",
      "namespace" : "com.retail.CustomerObject",
      "doc" : "Attributes which identify the customer within Retail store",
      "fields" : [ {
        "name" : "customerId",
        "type" : "string",
        "doc" : "Id assigned by company to customers"
      }, {
        "name" : "firstName",
        "type" : {
          "type" : "string",
          "logicalType" : "encrypted"
        },
        "doc" : "First name of the customer. This will be encrypted"
      }, {
        "name" : "middleName",
        "type" : [ "null", {
          "type" : "string",
          "logicalType" : "encrypted"
        } ],
        "doc" : "Middle name of the customer. This will be encrypted"
      }, {
        "name" : "lastName",
        "type" : {
          "type" : "string",
          "logicalType" : "encrypted"
        },
        "doc" : "Last name of the customer. This will be encrypted"
      }, {
        "name" : "prefix",
        "type" : [ "null", "string" ],
        "doc" : "Prefix for the name. This can be encrypted"
      }, {
        "name" : "suffix",
        "type" : [ "null", "string" ],
        "doc" : "Suffix for the name. This can be encrypted"
      }, {
        "name" : "gender",
        "type" : [ "null", "string" ],
        "doc" : "Gender of the customer. This can either be derived or collected.",
        "default" : null
      }, {
        "name" : "emailId",
        "type" : {
          "type" : "string",
          "logicalType" : "encrypted"
        },
        "doc" : "Email id for the customer\nCan be validated for format."
      }, {
        "name" : "phoneNumber",
        "type" : [ "null", {
          "type" : "string",
          "logicalType" : "encrypted"
        } ],
        "doc" : "Phone number for the customer. This can be optional\nWhat is the SOURCE:\nWhat cleansing rules should we apply or is this already by our SOURCE?"
      }, {
        "name" : "isEmployee",
        "type" : [ "null", "string" ],
        "doc" : "A flag to identify if the customer is an employee"
      }, {
        "name" : "customerSource",
        "type" : {
          "type" : "enum",
          "name" : "CustomerSource",
          "doc" : "Customer Source\n\n\tPHYGITAL -  In store POS\n\n\tDIGITAL - Online\n\n\tMARKETPLACE - Marketplace",
          "symbols" : [ "PHYGITAL", "DIGITAL", "MARKETPLACE" ]
        },
        "doc" : "customer source - phygital, digital, marketplace etc"
      }, {
        "name" : "createdDate",
        "type" : {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        },
        "doc" : "Date when this record was created"
      }, {
        "name" : "updatedDate",
        "type" : {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        },
        "doc" : "Date when this record was updated"
      } ]
    },
    "doc" : "Id assigned by Retail store to Customer What is the SOURCE:"
  }, {
    "name" : "CustomerAddresses",
    "type" : {
      "type" : "array",
      "items" : {
        "type" : "record",
        "name" : "CustomerAddress",
        "namespace" : "com.retail.CustomerObject",
        "doc" : "Attributes which provide the customer address within Retail store.",
        "fields" : [ {
          "name" : "customerId",
          "type" : "string",
          "doc" : "Id assigned by Retail store to customers"
        }, {
          "name" : "addressLine1",
          "type" : {
            "type" : "string",
            "logicalType" : "encrypted"
          },
          "doc" : "Address Line 1"
        }, {
          "name" : "addressLine2",
          "type" : {
            "type" : "string",
            "logicalType" : "encrypted"
          },
          "doc" : "Address Line 2"
        }, {
          "name" : "addressLine3",
          "type" : [ "null", "string" ],
          "doc" : "Address Line 3"
        }, {
          "name" : "city",
          "type" : "string",
          "doc" : "City name"
        }, {
          "name" : "country",
          "type" : "string",
          "doc" : "Country"
        }, {
          "name" : "state",
          "type" : "string",
          "doc" : "State"
        }, {
          "name" : "postalCode",
          "type" : "string",
          "doc" : "The Postal Code."
        }, {
          "name" : "customerSource",
          "type" : "CustomerSource",
          "doc" : "customer source - xstore, sfcc, marketplace etc"
        }, {
          "name" : "createdDate",
          "type" : {
            "type" : "long",
            "logicalType" : "timestamp-millis"
          },
          "doc" : "Date when this record was created"
        }, {
          "name" : "updatedDate",
          "type" : {
            "type" : "long",
            "logicalType" : "timestamp-millis"
          },
          "doc" : "Date when this record was updated"
        } ]
      }
    },
    "doc" : "Customer Addresses What is the SOURCE:",
    "default" : [ ]
  }, {
    "name" : "CustomerContactPreference",
    "type" : {
      "type" : "record",
      "name" : "CustomerContactPreference",
      "namespace" : "com.retail.CustomerObject",
      "doc" : "This object should provide for the customer Contact Preferences\nMaybe we should add a source field here.",
      "fields" : [ {
        "name" : "customerId",
        "type" : "string",
        "doc" : "Id assigned by Retail store to customers"
      }, {
        "name" : "emailPreference",
        "type" : "string",
        "doc" : "Email preference of the customer Opt-in or Opt-out"
      }, {
        "name" : "phonePreference",
        "type" : "string",
        "doc" : "Phone preference of the customer"
      }, {
        "name" : "dataRetentionPeriod",
        "type" : "string",
        "doc" : "Data retention period"
      }, {
        "name" : "consentDetails",
        "type" : "string",
        "doc" : "Consent details on Allow use to personal data and others."
      }, {
        "name" : "createdDate",
        "type" : {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        },
        "doc" : "Date when this record was created"
      }, {
        "name" : "updatedDate",
        "type" : {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        },
        "doc" : "Date when this record was updated"
      } ]
    },
    "doc" : "Customer Contact Preference What is the SOURCE:"
  }, {
    "name" : "CustomerContentPreference",
    "type" : {
      "type" : "record",
      "name" : "CustomerContentPreference",
      "namespace" : "com.retail.CustomerObject",
      "doc" : "This object should provide for the Customer Contentt Preferences",
      "fields" : [ {
        "name" : "customerId",
        "type" : "string",
        "doc" : "Id assigned by Retail store to customers"
      }, {
        "name" : "emailContentPreference",
        "type" : {
          "type" : "enum",
          "name" : "ContentPreference",
          "doc" : "Content to be selected during Marketing\n\n\tMENS - Everything Mens\n\n\tWOMENS Everything Womens\n\n\tMENS-PANTS - Mens Pants only\n\n\tWOMENS-PANTS - Womens Pants only\n\n\tMENS-OUTERWEAR - Mens Outerwear only\n\n\tWOMENS-LEGGINGS - Womens Leggings only\n\n\tMENS-ACCESSORIES - Mens Accessories only",
          "symbols" : [ "MENS", "WOMENS", "MENSPANTS", "WOMENSPANTS", "MENSOUTERWEAR", "WOMENSLEGGINGS", "MENSACCESSORIES" ]
        },
        "doc" : "Email Content Preference"
      }, {
        "name" : "emailFrequency",
        "type" : {
          "type" : "enum",
          "name" : "MarketingFrequency",
          "doc" : "Frequency of Marketing emails\n\n\tWEEKLY - one email per week\n\n\tBIWEEKLY - One email every 2 weeks\n\n\tDAILY - Daily one email\n\n\tMONTHLY - One email per month\n\n\tFORTNIGHT - One email every 15 days\n\n\t2PERWEEK - 2 emails per week",
          "symbols" : [ "WEEKLY", "BIWEEKLY", "DAILY", "MONTHLY", "FORTNIGHT", "TWOPERWEEK" ]
        },
        "doc" : "Frequency of emails that can be sent"
      }, {
        "name" : "phoneContentPreference",
        "type" : "ContentPreference",
        "doc" : "Content preference for phone messages"
      }, {
        "name" : "phoneFrequency",
        "type" : "MarketingFrequency",
        "doc" : "Frequencey of sms messages to the customer"
      }, {
        "name" : "createdDate",
        "type" : {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        },
        "doc" : "Date when this record was created"
      }, {
        "name" : "updatedDate",
        "type" : {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        },
        "doc" : "Date when this record was updated"
      } ]
    },
    "doc" : "Customer Content Preference What is the SOURCE:"
  }, {
    "name" : "CustomerMemberShip",
    "type" : {
      "type" : "record",
      "name" : "CustomerMemberShip",
      "namespace" : "com.retail.CustomerObject",
      "doc" : "This object should provide for the customer Membership details in different programs",
      "fields" : [ {
        "name" : "customerId",
        "type" : "string",
        "doc" : "Id assigned by Retail store to customers"
      }, {
        "name" : "programName",
        "type" : {
          "type" : "enum",
          "name" : "Programs",
          "doc" : "Programs\n\n\tHIGHTIER - High Tier Customers\n\n\tLEADER - Leads communities for the company\n\n\tLOYALTY - Another loyalty program",
          "symbols" : [ "HIGHTIER", "LEADER", "LOYALTY" ]
        },
        "doc" : "Name of the program"
      }, {
        "name" : "programId",
        "type" : "int",
        "doc" : "ID of the Program"
      }, {
        "name" : "startDate",
        "type" : {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        },
        "doc" : "Date when this record was created"
      }, {
        "name" : "endDate",
        "type" : [ "null", {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        } ],
        "doc" : "Date when this record was updated",
        "default" : null
      }, {
        "name" : "createdDate",
        "type" : {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        },
        "doc" : "Date when this record was created"
      }, {
        "name" : "updatedDate",
        "type" : {
          "type" : "long",
          "logicalType" : "timestamp-millis"
        },
        "doc" : "Date when this record was updated"
      } ]
    },
    "doc" : "Customer membership What is the SOURCE:"
  } ]
}